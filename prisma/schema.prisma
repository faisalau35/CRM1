generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(cuid())
  name      String?
  email     String     @unique
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  isAdmin   Boolean    @default(false)
  customers Customer[]
}

model Customer {
  id             String         @id @default(cuid())
  firstName      String
  lastName       String
  email          String?
  phone          String?
  address        String?
  city           String?
  state          String?
  zipCode        String?
  ssn            String?
  driverLicense  String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  userId         String
  dateOfBirth    DateTime?
  notes          String?
  secondaryEmail String?
  secondaryPhone String?
  ipAddress      String?
  status         CustomerStatus @default(IN_PROGRESS)
  creditCards    CreditCard[]
  createdBy      User           @relation(fields: [userId], references: [id])
}

model CreditCard {
  id             String   @id @default(cuid())
  cardNumber     String
  cardholderName String
  expiryMonth    Int
  expiryYear     Int
  cvv            String
  isDefault      Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  customerId     String
  customer       Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
}

model BinCache {
  id        String   @id @default(cuid())
  bin       String   @unique
  bankName  String?
  cardType  String?
  scheme    String?
  country   String?
  isValid   Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cardTier  String?

  @@index([bin])
}

enum CustomerStatus {
  IN_PROGRESS
  ENGAGED
  DEAD
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}
